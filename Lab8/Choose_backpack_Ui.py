# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Choose_backpack.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QFileDialog, QDialog, QVBoxLayout, QTableWidgetItem, QCheckBox, QMessageBox
import sys, csv
import Table_Ui


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(728, 692)
        self.ChoosingItems_table = QtWidgets.QTableWidget(Form)
        self.ChoosingItems_table.setGeometry(QtCore.QRect(20, 20, 511, 651))
        self.ChoosingItems_table.setAccessibleName("")
        self.ChoosingItems_table.setRowCount(0)
        self.ChoosingItems_table.setColumnCount(4)
        self.ChoosingItems_table.setObjectName("ChoosingItems_table")
        item = QtWidgets.QTableWidgetItem()
        self.ChoosingItems_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.ChoosingItems_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.ChoosingItems_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.ChoosingItems_table.setHorizontalHeaderItem(3, item)
        self.DeleteButton = QtWidgets.QPushButton(Form)
        self.DeleteButton.setGeometry(QtCore.QRect(570, 50, 121, 28))
        self.DeleteButton.setObjectName("DeleteButton")
        self.BackButton = QtWidgets.QPushButton(Form)
        self.BackButton.setGeometry(QtCore.QRect(580, 620, 93, 28))
        self.BackButton.setObjectName("BackButton")
        self.DeleteAllButton = QtWidgets.QPushButton(Form)
        self.DeleteAllButton.setGeometry(QtCore.QRect(570, 100, 121, 28))
        self.DeleteAllButton.setObjectName("DeleteAllButton")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)
        self.loadDataFromFile()

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        item = self.ChoosingItems_table.horizontalHeaderItem(0)
        item.setText(_translate("Form", "Name"))
        item = self.ChoosingItems_table.horizontalHeaderItem(1)
        item.setText(_translate("Form", "Weight"))
        item = self.ChoosingItems_table.horizontalHeaderItem(2)
        item.setText(_translate("Form", "Cost"))
        item = self.ChoosingItems_table.horizontalHeaderItem(3)
        item.setText(_translate("Form", "Choose"))
        self.DeleteButton.setText(_translate("Form", "Delete"))
        self.BackButton.setText(_translate("Form", "Back"))
        self.DeleteAllButton.setText(_translate("Form", "Delete all"))

    def read_data_from_file(self):
        try:
            with open(f"C:\\Users\\Mrgor\\Desktop\\Programs\\For_study\\Python_labs\\First_year\\Lab8\\Backpack", 'r', encoding='UTF-8') as file:
                lines = file.readlines()[1:]  # Пропускаем заголовок
                data = [line.strip().split() for line in lines]
            return data
        except FileNotFoundError:
            print("Файл не найден.")
            return []

    def write_data_to_file_Backpack(self, data):
            try:
                with open(f"C:\\Users\\Mrgor\\Desktop\\Programs\\For_study\\Python_labs\\First_year\\Lab8\\Backpack", 'w', encoding='UTF-8') as file:
                    file.write("Name\tWeight\tCoast\n")  # Заголовок
                    for line in data:
                        file.write("\t".join(line) + "\n")
            except Exception as e:
                print(f"Ошибка при записи в файл: {e}")


    def loadDataFromFile(self):
        data = self.read_data_from_file()
        self.ChoosingItems_table.setRowCount(len(data))
        self.ChoosingItems_table.setColumnCount(4)  # Устанавливаем количество колонок

        for row_num, row_data in enumerate(data):
            for col_num, item in enumerate(row_data):
                self.ChoosingItems_table.setItem(row_num, col_num, QTableWidgetItem(item))

            # Добавляем флажок в четвертую колонку
            checkbox_item = QTableWidgetItem()
            checkbox_item.setFlags(checkbox_item.flags() | Qt.ItemIsUserCheckable)
            checkbox_item.setCheckState(Qt.Unchecked)
            self.ChoosingItems_table.setItem(row_num, 3, checkbox_item)

    def close_window(self):
        self.table = Table_Ui.MyDialog()
        self.table.open()
        self.close()


    def delete_selected(self):
        data = self.read_data_from_file()
        rows_to_delete = []

        for row in range(self.ChoosingItems_table.rowCount() - 1, -1, -1):
            item = self.ChoosingItems_table.item(row, 3)
            if item.checkState() == Qt.Checked:
                rows_to_delete.append(row)

        for row in rows_to_delete:
            self.ChoosingItems_table.removeRow(row)
            del data[row]

        self.write_data_to_file_Backpack(data)
    
    def delete_all(self):
        data = self.read_data_from_file()
        with open(f"C:\\Users\\Mrgor\\Desktop\\Programs\\For_study\\Python_labs\\First_year\\Lab8\\Backpack", 'w', encoding='utf-8') as file:
            for row_data in data:
                # Объединяем элементы строки через табуляцию и добавляем символ новой строки
                file.seek(0)
                file.write("Name\tWeight\tCoast\n")
        self.ChoosingItems_table.setRowCount(0)
        

class MyDialog(QDialog, Ui_Form):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.BackButton.clicked.connect(self.close_window)
        self.DeleteButton.clicked.connect(self.delete_selected)
        self.DeleteAllButton.clicked.connect(self.delete_all)
